
package hds;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebService(name = "HDSServer", targetNamespace = "http://hds/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface HDSServer {


    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws InvalidInputException_Exception
     * @throws FailToLogRequestException_Exception
     */
    @WebMethod(operationName = "send_amount")
    @RequestWrapper(localName = "send_amount", targetNamespace = "http://hds/", className = "hds.SendAmount")
    @ResponseWrapper(localName = "send_amountResponse", targetNamespace = "http://hds/", className = "hds.SendAmountResponse")
    @Action(input = "http://hds/HDSServer/send_amountRequest", output = "http://hds/HDSServer/send_amountResponse", fault = {
        @FaultAction(className = InvalidInputException_Exception.class, value = "http://hds/HDSServer/send_amount/Fault/InvalidInputException"),
        @FaultAction(className = FailToLogRequestException_Exception.class, value = "http://hds/HDSServer/send_amount/Fault/FailToLogRequestException")
    })
    public void sendAmount(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        float arg2)
        throws FailToLogRequestException_Exception, InvalidInputException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws InvalidInputException_Exception
     * @throws FailToLogRequestException_Exception
     */
    @WebMethod(operationName = "receive_amount")
    @RequestWrapper(localName = "receive_amount", targetNamespace = "http://hds/", className = "hds.ReceiveAmount")
    @ResponseWrapper(localName = "receive_amountResponse", targetNamespace = "http://hds/", className = "hds.ReceiveAmountResponse")
    @Action(input = "http://hds/HDSServer/receive_amountRequest", output = "http://hds/HDSServer/receive_amountResponse", fault = {
        @FaultAction(className = InvalidInputException_Exception.class, value = "http://hds/HDSServer/receive_amount/Fault/InvalidInputException"),
        @FaultAction(className = FailToLogRequestException_Exception.class, value = "http://hds/HDSServer/receive_amount/Fault/FailToLogRequestException")
    })
    public void receiveAmount(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1)
        throws FailToLogRequestException_Exception, InvalidInputException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns hds.CheckResult
     * @throws InvalidInputException_Exception
     */
    @WebMethod(operationName = "check_account")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "check_account", targetNamespace = "http://hds/", className = "hds.CheckAccount")
    @ResponseWrapper(localName = "check_accountResponse", targetNamespace = "http://hds/", className = "hds.CheckAccountResponse")
    @Action(input = "http://hds/HDSServer/check_accountRequest", output = "http://hds/HDSServer/check_accountResponse", fault = {
        @FaultAction(className = InvalidInputException_Exception.class, value = "http://hds/HDSServer/check_account/Fault/InvalidInputException")
    })
    public CheckResult checkAccount(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws InvalidInputException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns hds.AuditResult
     * @throws InvalidInputException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "audit", targetNamespace = "http://hds/", className = "hds.Audit")
    @ResponseWrapper(localName = "auditResponse", targetNamespace = "http://hds/", className = "hds.AuditResponse")
    @Action(input = "http://hds/HDSServer/auditRequest", output = "http://hds/HDSServer/auditResponse", fault = {
        @FaultAction(className = InvalidInputException_Exception.class, value = "http://hds/HDSServer/audit/Fault/InvalidInputException")
    })
    public AuditResult audit(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws InvalidInputException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws InvalidInputException_Exception
     * @throws FailToLogRequestException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "register", targetNamespace = "http://hds/", className = "hds.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://hds/", className = "hds.RegisterResponse")
    @Action(input = "http://hds/HDSServer/registerRequest", output = "http://hds/HDSServer/registerResponse", fault = {
        @FaultAction(className = InvalidInputException_Exception.class, value = "http://hds/HDSServer/register/Fault/InvalidInputException"),
        @FaultAction(className = FailToLogRequestException_Exception.class, value = "http://hds/HDSServer/register/Fault/FailToLogRequestException")
    })
    public void register(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws FailToLogRequestException_Exception, InvalidInputException_Exception
    ;

}
